var request = require('request');
var mysql = require('mysql');

var Iconv = require('iconv').Iconv;
var euckr2utf8 = new Iconv('EUC-KR', 'UTF-8');
var utf82euckr = new Iconv('UTF-8', 'EUC-KR');
 
var connection = mysql.createConnection(
    {
      host     : 'localhost',
      user     : 'root',
      password : '159753',
      database : 'CHAT',
    }
);
 
connection.connect();

exports.signup = function(name,mobno,password,first_install_moment,connect_start_moment,reg_id,callback) {
utf82euckr.convert(name);
var data = {
            
            name    : name,
            mobno :  mobno,
            password : password,
            first_install_moment : first_install_moment,
            connect_start_moment : connect_start_moment,
            reg_id   : reg_id
            
        
        };
var que = "SELECT * from users WHERE mobno =" + mobno;

 var query = connection.query(que, function(err, rows)
        {
        
          if(rows.length == 0){
            var query = connection.query("INSERT INTO users set ? ",data, function(err, rows)
            {
              callback({'response':"Sucessfully Registered"});
            });
          }
            else{
              //callback({'response':"Duplicated Email or name. Rewrite another data."});
              callback({'response':"User already Registered, Duplicated phone number."});
            }
         });
  }


exports.signin = function(mobno,password,connect_start_moment,reg_id,callback) {

  var data = {
              
              mobno :  mobno,
              password:password,
              connect_start_moment : connect_start_moment,
              reg_id   : reg_id
              
          
          };
  connection.query("SELECT * from users WHERE mobno=? and password=?", [mobno,password],function(err, rows)
  {
      if(rows.length == 0){
      callback({'response':"Sign In Failed"});
      }else {
        //접속 시간 정보 넘기기
        var query = connection.query("update users set connect_start_moment = ? where mobno = ?", [connect_start_moment, mobno], function(err, rows)
            {
              callback({'response':"Sign In Success"});
            });
      }
  
  });

      
}

exports.save_total_time = function(mobno, connect_finish_moment, total_connect_time, callback) {



 var query = connection.query("SELECT * from users where mobno = " + mobno, function(err, rows)
        {
          if(rows.length==0){
            callback({'response':"save_total_time Failed"});
          }else {
            var query = connection.query("update users set connect_finish_moment = ?, total_connect_time = ? where mobno = ?", [connect_finish_moment, total_connect_time, mobno], function(err,rows)
            {
              callback({'response':"Save Total Time Success"});
            });

          }
      
        });

}

exports.load_total_time = function(mobno,callback) {



 var query = connection.query("SELECT * from users where mobno = " + mobno, function(err, rows)
        {
          if(rows.length==0){
            callback({'response':"Load Total Time Failed"});
          }else {

          callback(rows);

          }
      
        });

}

exports.load_rank = function(mobno,callback) {



 var query = connection.query("SELECT * from users", function(err, rows)
        {
          if(rows.length==0){
            callback({'response':"No Users Registered"});
          }else {

          callback(notRemoveUser(rows,mobno));

          }
      
        });

}

exports.getuser = function(mobno,callback) {
 var query = connection.query("SELECT * from users", function(err, rows)
        {
          if(rows.length==0){
            callback({'response':"No Users Registered"});
          }else {
            callback(removeUser(rows, mobno));

          }
      
        });
}


exports.removeuser = function(mobno,callback) {

var que = "DELETE FROM users  WHERE mobno =" + mobno;

var query = connection.query(que, function(err, rows)
        {   
          if(!err){
            callback({'response':"Removed Sucessfully"});
          }else{
            callback({'response':"Error"});
          }  
        });
}



exports.send = function(fromn,fromu,to,msg,callback) {

var que = "SELECT * from users WHERE mobno =" + to;

 var query = connection.query(que, function(err, rows)
        {
          if(rows.length==0){
            callback({'response':"Failure"});
        
          }else {

           
	var to_id = rows[0].reg_id;
	var name = rows[0].name;
request(
    { method: 'POST', 
    uri: 'https://android.googleapis.com/gcm/send',
    headers: {
        'Content-Type': 'application/json',
        'Authorization':'key=AIzaSyCwrF6Y_5QrjBDSGbej1O9-oUq09dTE9aE'
    },
    body: JSON.stringify({
  "registration_ids" : [to_id],
  "data" : {
    "msg":msg,
    "fromu":fromu,
    "name":fromn
  },
  "time_to_live": 108
})
    }
  , function (error, response, body) {

	  callback({'response':"Success"});
    }
  )
}});

}

function notRemoveUser(arr, val) {
    return arr;
}

function removeUser(arr, val) {
    for(var i=0; i<arr.length; i++) {
        if(arr[i].mobno == val) {
            arr.splice(i, 1);
            return arr;
            break;
        }
    }
}


